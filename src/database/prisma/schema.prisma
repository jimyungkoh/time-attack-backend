// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String @id
  email              String @unique
  encryptedPasswords String

  profile UserProfile?

  createdAt DateTime @default(now())

  tweets     Tweet[]
  bookmarks  Bookmark[]
  comments   Comment[]
  followers  Follow[]   @relation("follower")
  followings Follow[]   @relation("following")
}

model UserProfile {
  userId String @id
  user   User   @relation(fields: [userId], references: [id])

  nickname  String? @unique
  introduce String?

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}

model Follow {
  followerId  String
  follower    User   @relation("follower", fields: [followerId], references: [id])
  followingId String
  following   User   @relation("following", fields: [followingId], references: [id])

  @@id([followerId, followingId])
}

model Tweet {
  id       String @id
  title    String
  content  String
  authorId String
  author   User   @relation(fields: [authorId], references: [id])

  bookmarks Bookmark[]
  comments  Comment[]

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}

model Comment {
  id String @id

  tweetId     String
  tweet       Tweet  @relation(fields: [tweetId], references: [id])
  commenterId String
  commenter   User   @relation(fields: [commenterId], references: [id])

  content String

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  @@unique([tweetId, commenterId])
}

model Bookmark {
  tweetId String
  tweet   Tweet  @relation(fields: [tweetId], references: [id])
  userId  String
  user    User   @relation(fields: [userId], references: [id])

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  @@id([tweetId, userId])
}
